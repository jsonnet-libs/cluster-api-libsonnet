{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cluster-api Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>v1.0.2</li> </ul>"},{"location":"v1.0.2/","title":"cluster-api","text":"<pre><code>local cluster-api = import \"github.com/jsonnet-libs/cluster-api-libsonnet/v1.0.2/main.libsonnet\"\n</code></pre> <ul> <li>addons</li> <li>cluster</li> </ul>"},{"location":"v1.0.2/addons/","title":"addons","text":"<ul> <li>v1alpha3</li> <li>v1alpha4</li> <li>v1beta1</li> </ul>"},{"location":"v1.0.2/addons/v1alpha3/","title":"addons.v1alpha3","text":"<ul> <li>clusterResourceSet</li> <li>clusterResourceSetBinding</li> </ul>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/","title":"addons.v1alpha3.clusterResourceSet","text":"<p>\"ClusterResourceSet is the Schema for the clusterresourcesets API.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>fn withStrategy(strategy)</code></li> <li><code>obj spec.clusterSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.clusterSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.resources</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fields","title":"Fields","text":""},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterResourceSet</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#obj-spec","title":"obj spec","text":"<p>\"ClusterResourceSetSpec defines the desired state of ClusterResourceSet.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specwithresources","title":"fn spec.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specwithresourcesmixin","title":"fn spec.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specwithstrategy","title":"fn spec.withStrategy","text":"<pre><code>withStrategy(strategy)\n</code></pre> <p>\"Strategy is the strategy to be used during applying resources. Defaults to ApplyOnce. This field is immutable.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#obj-specclusterselector","title":"obj spec.clusterSelector","text":"<p>\"Label selector for Clusters. The Clusters that are selected by this will be the ones affected by this ClusterResourceSet. It must match the Cluster labels. This field is immutable.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectorwithmatchexpressions","title":"fn spec.clusterSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectorwithmatchexpressionsmixin","title":"fn spec.clusterSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectorwithmatchlabels","title":"fn spec.clusterSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectorwithmatchlabelsmixin","title":"fn spec.clusterSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#obj-specclusterselectormatchexpressions","title":"obj spec.clusterSelector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectormatchexpressionswithkey","title":"fn spec.clusterSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectormatchexpressionswithoperator","title":"fn spec.clusterSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectormatchexpressionswithvalues","title":"fn spec.clusterSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specclusterselectormatchexpressionswithvaluesmixin","title":"fn spec.clusterSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#obj-specresources","title":"obj spec.resources","text":"<p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specresourceswithkind","title":"fn spec.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource. Supported kinds are: Secrets and ConfigMaps.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSet/#fn-specresourceswithname","title":"fn spec.resources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the resource that is in the same namespace with ClusterResourceSet object.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/","title":"addons.v1alpha3.clusterResourceSetBinding","text":"<p>\"ClusterResourceSetBinding lists all matching ClusterResourceSets with the cluster it belongs to.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBindings(bindings)</code></li> <li><code>fn withBindingsMixin(bindings)</code></li> <li><code>obj spec.bindings</code><ul> <li><code>fn withClusterResourceSetName(clusterResourceSetName)</code></li> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>obj spec.bindings.resources</code><ul> <li><code>fn withApplied(applied)</code></li> <li><code>fn withHash(hash)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withLastAppliedTime(lastAppliedTime)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fields","title":"Fields","text":""},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterResourceSetBinding</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#obj-spec","title":"obj spec","text":"<p>\"ClusterResourceSetBindingSpec defines the desired state of ClusterResourceSetBinding.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specwithbindings","title":"fn spec.withBindings","text":"<pre><code>withBindings(bindings)\n</code></pre> <p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specwithbindingsmixin","title":"fn spec.withBindingsMixin","text":"<pre><code>withBindingsMixin(bindings)\n</code></pre> <p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#obj-specbindings","title":"obj spec.bindings","text":"<p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingswithclusterresourcesetname","title":"fn spec.bindings.withClusterResourceSetName","text":"<pre><code>withClusterResourceSetName(clusterResourceSetName)\n</code></pre> <p>\"ClusterResourceSetName is the name of the ClusterResourceSet that is applied to the owner cluster of the binding.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingswithresources","title":"fn spec.bindings.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingswithresourcesmixin","title":"fn spec.bindings.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#obj-specbindingsresources","title":"obj spec.bindings.resources","text":"<p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingsresourceswithapplied","title":"fn spec.bindings.resources.withApplied","text":"<pre><code>withApplied(applied)\n</code></pre> <p>\"Applied is to track if a resource is applied to the cluster or not.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingsresourceswithhash","title":"fn spec.bindings.resources.withHash","text":"<pre><code>withHash(hash)\n</code></pre> <p>\"Hash is the hash of a resource's data. This can be used to decide if a resource is changed. For \\\"ApplyOnce\\\" ClusterResourceSet.spec.strategy, this is no-op as that strategy does not act on change.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingsresourceswithkind","title":"fn spec.bindings.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource. Supported kinds are: Secrets and ConfigMaps.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingsresourceswithlastappliedtime","title":"fn spec.bindings.resources.withLastAppliedTime","text":"<pre><code>withLastAppliedTime(lastAppliedTime)\n</code></pre> <p>\"LastAppliedTime identifies when this resource was last applied to the cluster.\"</p>"},{"location":"v1.0.2/addons/v1alpha3/clusterResourceSetBinding/#fn-specbindingsresourceswithname","title":"fn spec.bindings.resources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the resource that is in the same namespace with ClusterResourceSet object.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/","title":"addons.v1alpha4","text":"<ul> <li>clusterResourceSet</li> <li>clusterResourceSetBinding</li> </ul>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/","title":"addons.v1alpha4.clusterResourceSet","text":"<p>\"ClusterResourceSet is the Schema for the clusterresourcesets API.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>fn withStrategy(strategy)</code></li> <li><code>obj spec.clusterSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.clusterSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.resources</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fields","title":"Fields","text":""},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterResourceSet</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#obj-spec","title":"obj spec","text":"<p>\"ClusterResourceSetSpec defines the desired state of ClusterResourceSet.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specwithresources","title":"fn spec.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specwithresourcesmixin","title":"fn spec.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specwithstrategy","title":"fn spec.withStrategy","text":"<pre><code>withStrategy(strategy)\n</code></pre> <p>\"Strategy is the strategy to be used during applying resources. Defaults to ApplyOnce. This field is immutable.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#obj-specclusterselector","title":"obj spec.clusterSelector","text":"<p>\"Label selector for Clusters. The Clusters that are selected by this will be the ones affected by this ClusterResourceSet. It must match the Cluster labels. This field is immutable. Label selector cannot be empty.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectorwithmatchexpressions","title":"fn spec.clusterSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectorwithmatchexpressionsmixin","title":"fn spec.clusterSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectorwithmatchlabels","title":"fn spec.clusterSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectorwithmatchlabelsmixin","title":"fn spec.clusterSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#obj-specclusterselectormatchexpressions","title":"obj spec.clusterSelector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectormatchexpressionswithkey","title":"fn spec.clusterSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectormatchexpressionswithoperator","title":"fn spec.clusterSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectormatchexpressionswithvalues","title":"fn spec.clusterSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specclusterselectormatchexpressionswithvaluesmixin","title":"fn spec.clusterSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#obj-specresources","title":"obj spec.resources","text":"<p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specresourceswithkind","title":"fn spec.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource. Supported kinds are: Secrets and ConfigMaps.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSet/#fn-specresourceswithname","title":"fn spec.resources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the resource that is in the same namespace with ClusterResourceSet object.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/","title":"addons.v1alpha4.clusterResourceSetBinding","text":"<p>\"ClusterResourceSetBinding lists all matching ClusterResourceSets with the cluster it belongs to.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBindings(bindings)</code></li> <li><code>fn withBindingsMixin(bindings)</code></li> <li><code>obj spec.bindings</code><ul> <li><code>fn withClusterResourceSetName(clusterResourceSetName)</code></li> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>obj spec.bindings.resources</code><ul> <li><code>fn withApplied(applied)</code></li> <li><code>fn withHash(hash)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withLastAppliedTime(lastAppliedTime)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fields","title":"Fields","text":""},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterResourceSetBinding</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#obj-spec","title":"obj spec","text":"<p>\"ClusterResourceSetBindingSpec defines the desired state of ClusterResourceSetBinding.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specwithbindings","title":"fn spec.withBindings","text":"<pre><code>withBindings(bindings)\n</code></pre> <p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specwithbindingsmixin","title":"fn spec.withBindingsMixin","text":"<pre><code>withBindingsMixin(bindings)\n</code></pre> <p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#obj-specbindings","title":"obj spec.bindings","text":"<p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingswithclusterresourcesetname","title":"fn spec.bindings.withClusterResourceSetName","text":"<pre><code>withClusterResourceSetName(clusterResourceSetName)\n</code></pre> <p>\"ClusterResourceSetName is the name of the ClusterResourceSet that is applied to the owner cluster of the binding.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingswithresources","title":"fn spec.bindings.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingswithresourcesmixin","title":"fn spec.bindings.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#obj-specbindingsresources","title":"obj spec.bindings.resources","text":"<p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingsresourceswithapplied","title":"fn spec.bindings.resources.withApplied","text":"<pre><code>withApplied(applied)\n</code></pre> <p>\"Applied is to track if a resource is applied to the cluster or not.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingsresourceswithhash","title":"fn spec.bindings.resources.withHash","text":"<pre><code>withHash(hash)\n</code></pre> <p>\"Hash is the hash of a resource's data. This can be used to decide if a resource is changed. For \\\"ApplyOnce\\\" ClusterResourceSet.spec.strategy, this is no-op as that strategy does not act on change.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingsresourceswithkind","title":"fn spec.bindings.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource. Supported kinds are: Secrets and ConfigMaps.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingsresourceswithlastappliedtime","title":"fn spec.bindings.resources.withLastAppliedTime","text":"<pre><code>withLastAppliedTime(lastAppliedTime)\n</code></pre> <p>\"LastAppliedTime identifies when this resource was last applied to the cluster.\"</p>"},{"location":"v1.0.2/addons/v1alpha4/clusterResourceSetBinding/#fn-specbindingsresourceswithname","title":"fn spec.bindings.resources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the resource that is in the same namespace with ClusterResourceSet object.\"</p>"},{"location":"v1.0.2/addons/v1beta1/","title":"addons.v1beta1","text":"<ul> <li>clusterResourceSet</li> <li>clusterResourceSetBinding</li> </ul>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/","title":"addons.v1beta1.clusterResourceSet","text":"<p>\"ClusterResourceSet is the Schema for the clusterresourcesets API.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>fn withStrategy(strategy)</code></li> <li><code>obj spec.clusterSelector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.clusterSelector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.resources</code><ul> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fields","title":"Fields","text":""},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterResourceSet</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#obj-spec","title":"obj spec","text":"<p>\"ClusterResourceSetSpec defines the desired state of ClusterResourceSet.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specwithresources","title":"fn spec.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specwithresourcesmixin","title":"fn spec.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specwithstrategy","title":"fn spec.withStrategy","text":"<pre><code>withStrategy(strategy)\n</code></pre> <p>\"Strategy is the strategy to be used during applying resources. Defaults to ApplyOnce. This field is immutable.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#obj-specclusterselector","title":"obj spec.clusterSelector","text":"<p>\"Label selector for Clusters. The Clusters that are selected by this will be the ones affected by this ClusterResourceSet. It must match the Cluster labels. This field is immutable. Label selector cannot be empty.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectorwithmatchexpressions","title":"fn spec.clusterSelector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectorwithmatchexpressionsmixin","title":"fn spec.clusterSelector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectorwithmatchlabels","title":"fn spec.clusterSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectorwithmatchlabelsmixin","title":"fn spec.clusterSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#obj-specclusterselectormatchexpressions","title":"obj spec.clusterSelector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectormatchexpressionswithkey","title":"fn spec.clusterSelector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectormatchexpressionswithoperator","title":"fn spec.clusterSelector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectormatchexpressionswithvalues","title":"fn spec.clusterSelector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specclusterselectormatchexpressionswithvaluesmixin","title":"fn spec.clusterSelector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#obj-specresources","title":"obj spec.resources","text":"<p>\"Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specresourceswithkind","title":"fn spec.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource. Supported kinds are: Secrets and ConfigMaps.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSet/#fn-specresourceswithname","title":"fn spec.resources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the resource that is in the same namespace with ClusterResourceSet object.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/","title":"addons.v1beta1.clusterResourceSetBinding","text":"<p>\"ClusterResourceSetBinding lists all matching ClusterResourceSets with the cluster it belongs to.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBindings(bindings)</code></li> <li><code>fn withBindingsMixin(bindings)</code></li> <li><code>obj spec.bindings</code><ul> <li><code>fn withClusterResourceSetName(clusterResourceSetName)</code></li> <li><code>fn withResources(resources)</code></li> <li><code>fn withResourcesMixin(resources)</code></li> <li><code>obj spec.bindings.resources</code><ul> <li><code>fn withApplied(applied)</code></li> <li><code>fn withHash(hash)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withLastAppliedTime(lastAppliedTime)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fields","title":"Fields","text":""},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterResourceSetBinding</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#obj-spec","title":"obj spec","text":"<p>\"ClusterResourceSetBindingSpec defines the desired state of ClusterResourceSetBinding.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specwithbindings","title":"fn spec.withBindings","text":"<pre><code>withBindings(bindings)\n</code></pre> <p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specwithbindingsmixin","title":"fn spec.withBindingsMixin","text":"<pre><code>withBindingsMixin(bindings)\n</code></pre> <p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#obj-specbindings","title":"obj spec.bindings","text":"<p>\"Bindings is a list of ClusterResourceSets and their resources.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingswithclusterresourcesetname","title":"fn spec.bindings.withClusterResourceSetName","text":"<pre><code>withClusterResourceSetName(clusterResourceSetName)\n</code></pre> <p>\"ClusterResourceSetName is the name of the ClusterResourceSet that is applied to the owner cluster of the binding.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingswithresources","title":"fn spec.bindings.withResources","text":"<pre><code>withResources(resources)\n</code></pre> <p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingswithresourcesmixin","title":"fn spec.bindings.withResourcesMixin","text":"<pre><code>withResourcesMixin(resources)\n</code></pre> <p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#obj-specbindingsresources","title":"obj spec.bindings.resources","text":"<p>\"Resources is a list of resources that the ClusterResourceSet has.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingsresourceswithapplied","title":"fn spec.bindings.resources.withApplied","text":"<pre><code>withApplied(applied)\n</code></pre> <p>\"Applied is to track if a resource is applied to the cluster or not.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingsresourceswithhash","title":"fn spec.bindings.resources.withHash","text":"<pre><code>withHash(hash)\n</code></pre> <p>\"Hash is the hash of a resource's data. This can be used to decide if a resource is changed. For \\\"ApplyOnce\\\" ClusterResourceSet.spec.strategy, this is no-op as that strategy does not act on change.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingsresourceswithkind","title":"fn spec.bindings.resources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the resource. Supported kinds are: Secrets and ConfigMaps.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingsresourceswithlastappliedtime","title":"fn spec.bindings.resources.withLastAppliedTime","text":"<pre><code>withLastAppliedTime(lastAppliedTime)\n</code></pre> <p>\"LastAppliedTime identifies when this resource was last applied to the cluster.\"</p>"},{"location":"v1.0.2/addons/v1beta1/clusterResourceSetBinding/#fn-specbindingsresourceswithname","title":"fn spec.bindings.resources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the resource that is in the same namespace with ClusterResourceSet object.\"</p>"},{"location":"v1.0.2/cluster/","title":"cluster","text":"<ul> <li>v1alpha3</li> <li>v1alpha4</li> <li>v1beta1</li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/","title":"cluster.v1alpha3","text":"<ul> <li>cluster</li> <li>machine</li> <li>machineDeployment</li> <li>machineHealthCheck</li> <li>machinePool</li> <li>machineSet</li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/","title":"cluster.v1alpha3.cluster","text":"<p>\"Cluster is the Schema for the clusters API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withPaused(paused)</code></li> <li><code>obj spec.clusterNetwork</code><ul> <li><code>fn withApiServerPort(apiServerPort)</code></li> <li><code>fn withServiceDomain(serviceDomain)</code></li> <li><code>obj spec.clusterNetwork.pods</code><ul> <li><code>fn withCidrBlocks(cidrBlocks)</code></li> <li><code>fn withCidrBlocksMixin(cidrBlocks)</code></li> </ul> </li> <li><code>obj spec.clusterNetwork.services</code><ul> <li><code>fn withCidrBlocks(cidrBlocks)</code></li> <li><code>fn withCidrBlocksMixin(cidrBlocks)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controlPlaneEndpoint</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.controlPlaneRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Cluster</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-spec","title":"obj spec","text":"<p>\"ClusterSpec defines the desired state of Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specwithpaused","title":"fn spec.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused can be used to prevent controllers from processing the Cluster and all its associated objects.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-specclusternetwork","title":"obj spec.clusterNetwork","text":"<p>\"Cluster network configuration.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specclusternetworkwithapiserverport","title":"fn spec.clusterNetwork.withApiServerPort","text":"<pre><code>withApiServerPort(apiServerPort)\n</code></pre> <p>\"APIServerPort specifies the port the API Server should bind to. Defaults to 6443.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specclusternetworkwithservicedomain","title":"fn spec.clusterNetwork.withServiceDomain","text":"<pre><code>withServiceDomain(serviceDomain)\n</code></pre> <p>\"Domain name for services.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-specclusternetworkpods","title":"obj spec.clusterNetwork.pods","text":"<p>\"The network ranges from which Pod networks are allocated.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specclusternetworkpodswithcidrblocks","title":"fn spec.clusterNetwork.pods.withCidrBlocks","text":"<pre><code>withCidrBlocks(cidrBlocks)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specclusternetworkpodswithcidrblocksmixin","title":"fn spec.clusterNetwork.pods.withCidrBlocksMixin","text":"<pre><code>withCidrBlocksMixin(cidrBlocks)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-specclusternetworkservices","title":"obj spec.clusterNetwork.services","text":"<p>\"The network ranges from which service VIPs are allocated.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specclusternetworkserviceswithcidrblocks","title":"fn spec.clusterNetwork.services.withCidrBlocks","text":"<pre><code>withCidrBlocks(cidrBlocks)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specclusternetworkserviceswithcidrblocksmixin","title":"fn spec.clusterNetwork.services.withCidrBlocksMixin","text":"<pre><code>withCidrBlocksMixin(cidrBlocks)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-speccontrolplaneendpoint","title":"obj spec.controlPlaneEndpoint","text":"<p>\"ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplaneendpointwithhost","title":"fn spec.controlPlaneEndpoint.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The hostname on which the API server is serving.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplaneendpointwithport","title":"fn spec.controlPlaneEndpoint.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"The port on which the API server is serving.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-speccontrolplaneref","title":"obj spec.controlPlaneRef","text":"<p>\"ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithapiversion","title":"fn spec.controlPlaneRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithfieldpath","title":"fn spec.controlPlaneRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithkind","title":"fn spec.controlPlaneRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithname","title":"fn spec.controlPlaneRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithnamespace","title":"fn spec.controlPlaneRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithresourceversion","title":"fn spec.controlPlaneRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-speccontrolplanerefwithuid","title":"fn spec.controlPlaneRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#obj-specinfrastructureref","title":"obj spec.infrastructureRef","text":"<p>\"InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/cluster/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/","title":"cluster.v1alpha3.machine","text":"<p>\"Machine is the Schema for the machines API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.bootstrap</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Machine</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#obj-spec","title":"obj spec","text":"<p>\"MachineSpec defines the desired state of Machine.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specwithfailuredomain","title":"fn spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specwithnodedraintimeout","title":"fn spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specwithproviderid","title":"fn spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specwithversion","title":"fn spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#obj-specbootstrap","title":"obj spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapwithdata","title":"fn spec.bootstrap.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data contains the bootstrap data, such as cloud-init details scripts. If nil, the Machine should remain in the Pending state. \\n Deprecated: Switch to DataSecretName.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapwithdatasecretname","title":"fn spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#obj-specbootstrapconfigref","title":"obj spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.Data without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithapiversion","title":"fn spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithfieldpath","title":"fn spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithkind","title":"fn spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithname","title":"fn spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithnamespace","title":"fn spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithresourceversion","title":"fn spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specbootstrapconfigrefwithuid","title":"fn spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#obj-specinfrastructureref","title":"obj spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machine/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/","title":"cluster.v1alpha3.machineDeployment","text":"<p>\"MachineDeployment is the Schema for the machinedeployments API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withProgressDeadlineSeconds(progressDeadlineSeconds)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>fn withRevisionHistoryLimit(revisionHistoryLimit)</code></li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.strategy</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.strategy.rollingUpdate</code><ul> <li><code>fn withMaxSurge(maxSurge)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>obj spec.template.metadata.ownerReferences</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withBlockOwnerDeletion(blockOwnerDeletion)</code></li> <li><code>fn withController(controller)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineDeployment</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spec","title":"obj spec","text":"<p>\"MachineDeploymentSpec defines the desired state of MachineDeployment.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specwithpaused","title":"fn spec.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Indicates that the deployment is paused.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specwithprogressdeadlineseconds","title":"fn spec.withProgressDeadlineSeconds","text":"<pre><code>withProgressDeadlineSeconds(progressDeadlineSeconds)\n</code></pre> <p>\"The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specwithrevisionhistorylimit","title":"fn spec.withRevisionHistoryLimit","text":"<pre><code>withRevisionHistoryLimit(revisionHistoryLimit)\n</code></pre> <p>\"The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-specselector","title":"obj spec.selector","text":"<p>\"Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-specstrategy","title":"obj spec.strategy","text":"<p>\"The deployment strategy to use to replace existing machines with new ones.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specstrategywithtype","title":"fn spec.strategy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of deployment. Currently the only supported strategy is \\\"RollingUpdate\\\". Default is RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-specstrategyrollingupdate","title":"obj spec.strategy.rollingUpdate","text":"<p>\"Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specstrategyrollingupdatewithmaxsurge","title":"fn spec.strategy.rollingUpdate.withMaxSurge","text":"<pre><code>withMaxSurge(maxSurge)\n</code></pre> <p>\"The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-specstrategyrollingupdatewithmaxunavailable","title":"fn spec.strategy.rollingUpdate.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template describes the machines that will be created.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithgeneratename","title":"fn spec.template.metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. \\n If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). \\n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithname","title":"fn spec.template.metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithnamespace","title":"fn spec.template.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \\n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithownerreferences","title":"fn spec.template.metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadatawithownerreferencesmixin","title":"fn spec.template.metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplatemetadataownerreferences","title":"obj spec.template.metadata.ownerReferences","text":"<p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadataownerreferenceswithapiversion","title":"fn spec.template.metadata.ownerReferences.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadataownerreferenceswithblockownerdeletion","title":"fn spec.template.metadata.ownerReferences.withBlockOwnerDeletion","text":"<pre><code>withBlockOwnerDeletion(blockOwnerDeletion)\n</code></pre> <p>\"If true, AND if the owner has the \\\"foregroundDeletion\\\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \\\"delete\\\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadataownerreferenceswithcontroller","title":"fn spec.template.metadata.ownerReferences.withController","text":"<pre><code>withController(controller)\n</code></pre> <p>\"If true, this reference points to the managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadataownerreferenceswithkind","title":"fn spec.template.metadata.ownerReferences.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadataownerreferenceswithname","title":"fn spec.template.metadata.ownerReferences.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatemetadataownerreferenceswithuid","title":"fn spec.template.metadata.ownerReferences.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapwithdata","title":"fn spec.template.spec.bootstrap.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data contains the bootstrap data, such as cloud-init details scripts. If nil, the Machine should remain in the Pending state. \\n Deprecated: Switch to DataSecretName.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.Data without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineDeployment/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/","title":"cluster.v1alpha3.machineHealthCheck","text":"<p>\"MachineHealthCheck is the Schema for the machinehealthchecks API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withMaxUnhealthy(maxUnhealthy)</code></li> <li><code>fn withNodeStartupTimeout(nodeStartupTimeout)</code></li> <li><code>fn withUnhealthyConditions(unhealthyConditions)</code></li> <li><code>fn withUnhealthyConditionsMixin(unhealthyConditions)</code></li> <li><code>obj spec.remediationTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.unhealthyConditions</code><ul> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineHealthCheck</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#obj-spec","title":"obj spec","text":"<p>\"Specification of machine health check policy\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specwithmaxunhealthy","title":"fn spec.withMaxUnhealthy","text":"<pre><code>withMaxUnhealthy(maxUnhealthy)\n</code></pre> <p>\"Any further remediation is only allowed if at most \\\"MaxUnhealthy\\\" machines selected by \\\"selector\\\" are not healthy.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specwithnodestartuptimeout","title":"fn spec.withNodeStartupTimeout","text":"<pre><code>withNodeStartupTimeout(nodeStartupTimeout)\n</code></pre> <p>\"Machines older than this duration without a node will be considered to have failed and will be remediated.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specwithunhealthyconditions","title":"fn spec.withUnhealthyConditions","text":"<pre><code>withUnhealthyConditions(unhealthyConditions)\n</code></pre> <p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specwithunhealthyconditionsmixin","title":"fn spec.withUnhealthyConditionsMixin","text":"<pre><code>withUnhealthyConditionsMixin(unhealthyConditions)\n</code></pre> <p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#obj-specremediationtemplate","title":"obj spec.remediationTemplate","text":"<p>\"RemediationTemplate is a reference to a remediation template provided by an infrastructure provider. \\n This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithapiversion","title":"fn spec.remediationTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithfieldpath","title":"fn spec.remediationTemplate.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithkind","title":"fn spec.remediationTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithname","title":"fn spec.remediationTemplate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithnamespace","title":"fn spec.remediationTemplate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithresourceversion","title":"fn spec.remediationTemplate.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specremediationtemplatewithuid","title":"fn spec.remediationTemplate.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#obj-specselector","title":"obj spec.selector","text":"<p>\"Label selector to match machines whose health will be exercised\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#obj-specunhealthyconditions","title":"obj spec.unhealthyConditions","text":"<p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specunhealthyconditionswithtimeout","title":"fn spec.unhealthyConditions.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha3/machineHealthCheck/#fn-specunhealthyconditionswithtype","title":"fn spec.unhealthyConditions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/","title":"cluster.v1alpha3.machinePool","text":"<p>\"MachinePool is the Schema for the machinepools API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomains(failureDomains)</code></li> <li><code>fn withFailureDomainsMixin(failureDomains)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withProviderIDList(providerIDList)</code></li> <li><code>fn withProviderIDListMixin(providerIDList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.strategy</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.strategy.rollingUpdate</code><ul> <li><code>fn withMaxSurge(maxSurge)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>obj spec.template.metadata.ownerReferences</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withBlockOwnerDeletion(blockOwnerDeletion)</code></li> <li><code>fn withController(controller)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachinePool</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spec","title":"obj spec","text":"<p>\"MachinePoolSpec defines the desired state of MachinePool.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithfailuredomains","title":"fn spec.withFailureDomains","text":"<pre><code>withFailureDomains(failureDomains)\n</code></pre> <p>\"FailureDomains is the list of failure domains this MachinePool should be attached to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithfailuredomainsmixin","title":"fn spec.withFailureDomainsMixin","text":"<pre><code>withFailureDomainsMixin(failureDomains)\n</code></pre> <p>\"FailureDomains is the list of failure domains this MachinePool should be attached to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithprovideridlist","title":"fn spec.withProviderIDList","text":"<pre><code>withProviderIDList(providerIDList)\n</code></pre> <p>\"ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithprovideridlistmixin","title":"fn spec.withProviderIDListMixin","text":"<pre><code>withProviderIDListMixin(providerIDList)\n</code></pre> <p>\"ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-specstrategy","title":"obj spec.strategy","text":"<p>\"The deployment strategy to use to replace existing machine instances with new ones.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specstrategywithtype","title":"fn spec.strategy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of deployment. Currently the only supported strategy is \\\"RollingUpdate\\\". Default is RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-specstrategyrollingupdate","title":"obj spec.strategy.rollingUpdate","text":"<p>\"Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specstrategyrollingupdatewithmaxsurge","title":"fn spec.strategy.rollingUpdate.withMaxSurge","text":"<pre><code>withMaxSurge(maxSurge)\n</code></pre> <p>\"The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-specstrategyrollingupdatewithmaxunavailable","title":"fn spec.strategy.rollingUpdate.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template describes the machines that will be created.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithgeneratename","title":"fn spec.template.metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. \\n If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). \\n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithname","title":"fn spec.template.metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithnamespace","title":"fn spec.template.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \\n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithownerreferences","title":"fn spec.template.metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadatawithownerreferencesmixin","title":"fn spec.template.metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplatemetadataownerreferences","title":"obj spec.template.metadata.ownerReferences","text":"<p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadataownerreferenceswithapiversion","title":"fn spec.template.metadata.ownerReferences.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadataownerreferenceswithblockownerdeletion","title":"fn spec.template.metadata.ownerReferences.withBlockOwnerDeletion","text":"<pre><code>withBlockOwnerDeletion(blockOwnerDeletion)\n</code></pre> <p>\"If true, AND if the owner has the \\\"foregroundDeletion\\\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \\\"delete\\\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadataownerreferenceswithcontroller","title":"fn spec.template.metadata.ownerReferences.withController","text":"<pre><code>withController(controller)\n</code></pre> <p>\"If true, this reference points to the managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadataownerreferenceswithkind","title":"fn spec.template.metadata.ownerReferences.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadataownerreferenceswithname","title":"fn spec.template.metadata.ownerReferences.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatemetadataownerreferenceswithuid","title":"fn spec.template.metadata.ownerReferences.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapwithdata","title":"fn spec.template.spec.bootstrap.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data contains the bootstrap data, such as cloud-init details scripts. If nil, the Machine should remain in the Pending state. \\n Deprecated: Switch to DataSecretName.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.Data without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machinePool/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/","title":"cluster.v1alpha3.machineSet","text":"<p>\"MachineSet is the Schema for the machinesets API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withDeletePolicy(deletePolicy)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>obj spec.template.metadata.ownerReferences</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withBlockOwnerDeletion(blockOwnerDeletion)</code></li> <li><code>fn withController(controller)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineSet</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spec","title":"obj spec","text":"<p>\"MachineSetSpec defines the desired state of MachineSet.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specwithdeletepolicy","title":"fn spec.withDeletePolicy","text":"<pre><code>withDeletePolicy(deletePolicy)\n</code></pre> <p>\"DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to \\\"Random\\\".  Valid values are \\\"Random, \\\"Newest\\\", \\\"Oldest\\</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"MinReadySeconds is the minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-specselector","title":"obj spec.selector","text":"<p>\"Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources resources are treated as templates.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithgeneratename","title":"fn spec.template.metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. \\n If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). \\n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithname","title":"fn spec.template.metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithnamespace","title":"fn spec.template.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \\n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithownerreferences","title":"fn spec.template.metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadatawithownerreferencesmixin","title":"fn spec.template.metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplatemetadataownerreferences","title":"obj spec.template.metadata.ownerReferences","text":"<p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller. \\n Deprecated: This field has no function and is going to be removed in a next release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadataownerreferenceswithapiversion","title":"fn spec.template.metadata.ownerReferences.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadataownerreferenceswithblockownerdeletion","title":"fn spec.template.metadata.ownerReferences.withBlockOwnerDeletion","text":"<pre><code>withBlockOwnerDeletion(blockOwnerDeletion)\n</code></pre> <p>\"If true, AND if the owner has the \\\"foregroundDeletion\\\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \\\"delete\\\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadataownerreferenceswithcontroller","title":"fn spec.template.metadata.ownerReferences.withController","text":"<pre><code>withController(controller)\n</code></pre> <p>\"If true, this reference points to the managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadataownerreferenceswithkind","title":"fn spec.template.metadata.ownerReferences.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadataownerreferenceswithname","title":"fn spec.template.metadata.ownerReferences.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatemetadataownerreferenceswithuid","title":"fn spec.template.metadata.ownerReferences.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapwithdata","title":"fn spec.template.spec.bootstrap.withData","text":"<pre><code>withData(data)\n</code></pre> <p>\"Data contains the bootstrap data, such as cloud-init details scripts. If nil, the Machine should remain in the Pending state. \\n Deprecated: Switch to DataSecretName.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.Data without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha3/machineSet/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/","title":"cluster.v1alpha4","text":"<ul> <li>cluster</li> <li>clusterClass</li> <li>machine</li> <li>machineDeployment</li> <li>machineHealthCheck</li> <li>machinePool</li> <li>machineSet</li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/","title":"cluster.v1alpha4.cluster","text":"<p>\"Cluster is the Schema for the clusters API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withPaused(paused)</code></li> <li><code>obj spec.clusterNetwork</code><ul> <li><code>fn withApiServerPort(apiServerPort)</code></li> <li><code>fn withServiceDomain(serviceDomain)</code></li> <li><code>obj spec.clusterNetwork.pods</code><ul> <li><code>fn withCidrBlocks(cidrBlocks)</code></li> <li><code>fn withCidrBlocksMixin(cidrBlocks)</code></li> </ul> </li> <li><code>obj spec.clusterNetwork.services</code><ul> <li><code>fn withCidrBlocks(cidrBlocks)</code></li> <li><code>fn withCidrBlocksMixin(cidrBlocks)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controlPlaneEndpoint</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.controlPlaneRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.topology</code><ul> <li><code>fn withClass(class)</code></li> <li><code>fn withRolloutAfter(rolloutAfter)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.topology.controlPlane</code><ul> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.topology.controlPlane.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.topology.workers</code><ul> <li><code>fn withMachineDeployments(machineDeployments)</code></li> <li><code>fn withMachineDeploymentsMixin(machineDeployments)</code></li> <li><code>obj spec.topology.workers.machineDeployments</code><ul> <li><code>fn withClass(class)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.topology.workers.machineDeployments.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Cluster</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spec","title":"obj spec","text":"<p>\"ClusterSpec defines the desired state of Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specwithpaused","title":"fn spec.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused can be used to prevent controllers from processing the Cluster and all its associated objects.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-specclusternetwork","title":"obj spec.clusterNetwork","text":"<p>\"Cluster network configuration.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specclusternetworkwithapiserverport","title":"fn spec.clusterNetwork.withApiServerPort","text":"<pre><code>withApiServerPort(apiServerPort)\n</code></pre> <p>\"APIServerPort specifies the port the API Server should bind to. Defaults to 6443.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specclusternetworkwithservicedomain","title":"fn spec.clusterNetwork.withServiceDomain","text":"<pre><code>withServiceDomain(serviceDomain)\n</code></pre> <p>\"Domain name for services.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-specclusternetworkpods","title":"obj spec.clusterNetwork.pods","text":"<p>\"The network ranges from which Pod networks are allocated.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specclusternetworkpodswithcidrblocks","title":"fn spec.clusterNetwork.pods.withCidrBlocks","text":"<pre><code>withCidrBlocks(cidrBlocks)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specclusternetworkpodswithcidrblocksmixin","title":"fn spec.clusterNetwork.pods.withCidrBlocksMixin","text":"<pre><code>withCidrBlocksMixin(cidrBlocks)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-specclusternetworkservices","title":"obj spec.clusterNetwork.services","text":"<p>\"The network ranges from which service VIPs are allocated.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specclusternetworkserviceswithcidrblocks","title":"fn spec.clusterNetwork.services.withCidrBlocks","text":"<pre><code>withCidrBlocks(cidrBlocks)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specclusternetworkserviceswithcidrblocksmixin","title":"fn spec.clusterNetwork.services.withCidrBlocksMixin","text":"<pre><code>withCidrBlocksMixin(cidrBlocks)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-speccontrolplaneendpoint","title":"obj spec.controlPlaneEndpoint","text":"<p>\"ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplaneendpointwithhost","title":"fn spec.controlPlaneEndpoint.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The hostname on which the API server is serving.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplaneendpointwithport","title":"fn spec.controlPlaneEndpoint.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"The port on which the API server is serving.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-speccontrolplaneref","title":"obj spec.controlPlaneRef","text":"<p>\"ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithapiversion","title":"fn spec.controlPlaneRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithfieldpath","title":"fn spec.controlPlaneRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithkind","title":"fn spec.controlPlaneRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithname","title":"fn spec.controlPlaneRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithnamespace","title":"fn spec.controlPlaneRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithresourceversion","title":"fn spec.controlPlaneRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-speccontrolplanerefwithuid","title":"fn spec.controlPlaneRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-specinfrastructureref","title":"obj spec.infrastructureRef","text":"<p>\"InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spectopology","title":"obj spec.topology","text":"<p>\"This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologywithclass","title":"fn spec.topology.withClass","text":"<pre><code>withClass(class)\n</code></pre> <p>\"The name of the ClusterClass object to create the topology.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologywithrolloutafter","title":"fn spec.topology.withRolloutAfter","text":"<pre><code>withRolloutAfter(rolloutAfter)\n</code></pre> <p>\"RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologywithversion","title":"fn spec.topology.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"The Kubernetes version of the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spectopologycontrolplane","title":"obj spec.topology.controlPlane","text":"<p>\"ControlPlane describes the cluster control plane.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologycontrolplanewithreplicas","title":"fn spec.topology.controlPlane.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of control plane nodes. If the value is nil, the ControlPlane object is created without the number of Replicas and it's assumed that the control plane controller does not implement support for this field. When specified against a control plane provider that lacks support for this field, this value will be ignored.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spectopologycontrolplanemetadata","title":"obj spec.topology.controlPlane.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass. \\n This field is supported if and only if the control plane provider template referenced in the ClusterClass is Machine based.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologycontrolplanemetadatawithannotations","title":"fn spec.topology.controlPlane.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologycontrolplanemetadatawithannotationsmixin","title":"fn spec.topology.controlPlane.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologycontrolplanemetadatawithlabels","title":"fn spec.topology.controlPlane.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologycontrolplanemetadatawithlabelsmixin","title":"fn spec.topology.controlPlane.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spectopologyworkers","title":"obj spec.topology.workers","text":"<p>\"Workers encapsulates the different constructs that form the worker nodes for the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkerswithmachinedeployments","title":"fn spec.topology.workers.withMachineDeployments","text":"<pre><code>withMachineDeployments(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployments in the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkerswithmachinedeploymentsmixin","title":"fn spec.topology.workers.withMachineDeploymentsMixin","text":"<pre><code>withMachineDeploymentsMixin(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployments in the cluster.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spectopologyworkersmachinedeployments","title":"obj spec.topology.workers.machineDeployments","text":"<p>\"MachineDeployments is a list of machine deployments in the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentswithclass","title":"fn spec.topology.workers.machineDeployments.withClass","text":"<pre><code>withClass(class)\n</code></pre> <p>\"Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the <code>Cluster.Spec.Class</code> field.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentswithname","title":"fn spec.topology.workers.machineDeployments.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentswithreplicas","title":"fn spec.topology.workers.machineDeployments.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to zero) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#obj-spectopologyworkersmachinedeploymentsmetadata","title":"obj spec.topology.workers.machineDeployments.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithannotations","title":"fn spec.topology.workers.machineDeployments.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithannotationsmixin","title":"fn spec.topology.workers.machineDeployments.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithlabels","title":"fn spec.topology.workers.machineDeployments.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithlabelsmixin","title":"fn spec.topology.workers.machineDeployments.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/","title":"cluster.v1alpha4.clusterClass","text":"<p>\"ClusterClass is a template which can be used to create managed topologies.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.controlPlane</code><ul> <li><code>obj spec.controlPlane.machineInfrastructure</code><ul> <li><code>obj spec.controlPlane.machineInfrastructure.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controlPlane.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.controlPlane.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.infrastructure</code><ul> <li><code>obj spec.infrastructure.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workers</code><ul> <li><code>fn withMachineDeployments(machineDeployments)</code></li> <li><code>fn withMachineDeploymentsMixin(machineDeployments)</code></li> <li><code>obj spec.workers.machineDeployments</code><ul> <li><code>fn withClass(class)</code></li> <li><code>obj spec.workers.machineDeployments.template</code><ul> <li><code>obj spec.workers.machineDeployments.template.bootstrap</code><ul> <li><code>obj spec.workers.machineDeployments.template.bootstrap.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workers.machineDeployments.template.infrastructure</code><ul> <li><code>obj spec.workers.machineDeployments.template.infrastructure.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workers.machineDeployments.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterClass</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-spec","title":"obj spec","text":"<p>\"ClusterClassSpec describes the desired state of the ClusterClass.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-speccontrolplane","title":"obj spec.controlPlane","text":"<p>\"ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-speccontrolplanemachineinfrastructure","title":"obj spec.controlPlane.machineInfrastructure","text":"<p>\"MachineTemplate defines the metadata and infrastructure information for control plane machines. \\n This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-speccontrolplanemachineinfrastructureref","title":"obj spec.controlPlane.machineInfrastructure.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithapiversion","title":"fn spec.controlPlane.machineInfrastructure.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithfieldpath","title":"fn spec.controlPlane.machineInfrastructure.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithkind","title":"fn spec.controlPlane.machineInfrastructure.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithname","title":"fn spec.controlPlane.machineInfrastructure.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithnamespace","title":"fn spec.controlPlane.machineInfrastructure.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithresourceversion","title":"fn spec.controlPlane.machineInfrastructure.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithuid","title":"fn spec.controlPlane.machineInfrastructure.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-speccontrolplanemetadata","title":"obj spec.controlPlane.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology. \\n This field is supported if and only if the control plane provider template referenced is Machine based.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemetadatawithannotations","title":"fn spec.controlPlane.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemetadatawithannotationsmixin","title":"fn spec.controlPlane.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemetadatawithlabels","title":"fn spec.controlPlane.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanemetadatawithlabelsmixin","title":"fn spec.controlPlane.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-speccontrolplaneref","title":"obj spec.controlPlane.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithapiversion","title":"fn spec.controlPlane.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithfieldpath","title":"fn spec.controlPlane.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithkind","title":"fn spec.controlPlane.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithname","title":"fn spec.controlPlane.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithnamespace","title":"fn spec.controlPlane.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithresourceversion","title":"fn spec.controlPlane.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-speccontrolplanerefwithuid","title":"fn spec.controlPlane.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specinfrastructure","title":"obj spec.infrastructure","text":"<p>\"Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specinfrastructureref","title":"obj spec.infrastructure.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructure.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructure.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructure.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructure.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructure.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructure.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructure.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkers","title":"obj spec.workers","text":"<p>\"Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkerswithmachinedeployments","title":"fn spec.workers.withMachineDeployments","text":"<pre><code>withMachineDeployments(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkerswithmachinedeploymentsmixin","title":"fn spec.workers.withMachineDeploymentsMixin","text":"<pre><code>withMachineDeploymentsMixin(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeployments","title":"obj spec.workers.machineDeployments","text":"<p>\"MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentswithclass","title":"fn spec.workers.machineDeployments.withClass","text":"<pre><code>withClass(class)\n</code></pre> <p>\"Class denotes a type of worker node present in the cluster, this name MUST be unique within a ClusterClass and can be referenced in the Cluster to create a managed MachineDeployment.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeploymentstemplate","title":"obj spec.workers.machineDeployments.template","text":"<p>\"Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeploymentstemplatebootstrap","title":"obj spec.workers.machineDeployments.template.bootstrap","text":"<p>\"Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeploymentstemplatebootstrapref","title":"obj spec.workers.machineDeployments.template.bootstrap.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithapiversion","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithfieldpath","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithkind","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithname","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithnamespace","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithresourceversion","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithuid","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeploymentstemplateinfrastructure","title":"obj spec.workers.machineDeployments.template.infrastructure","text":"<p>\"Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeploymentstemplateinfrastructureref","title":"obj spec.workers.machineDeployments.template.infrastructure.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithapiversion","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithfieldpath","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithkind","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithname","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithnamespace","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithresourceversion","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithuid","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#obj-specworkersmachinedeploymentstemplatemetadata","title":"obj spec.workers.machineDeployments.template.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithannotations","title":"fn spec.workers.machineDeployments.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithannotationsmixin","title":"fn spec.workers.machineDeployments.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithlabels","title":"fn spec.workers.machineDeployments.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithlabelsmixin","title":"fn spec.workers.machineDeployments.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/","title":"cluster.v1alpha4.machine","text":"<p>\"Machine is the Schema for the machines API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Machine</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#obj-spec","title":"obj spec","text":"<p>\"MachineSpec defines the desired state of Machine.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specwithfailuredomain","title":"fn spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specwithnodedraintimeout","title":"fn spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specwithproviderid","title":"fn spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specwithversion","title":"fn spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#obj-specbootstrap","title":"obj spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapwithdatasecretname","title":"fn spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#obj-specbootstrapconfigref","title":"obj spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithapiversion","title":"fn spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithfieldpath","title":"fn spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithkind","title":"fn spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithname","title":"fn spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithnamespace","title":"fn spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithresourceversion","title":"fn spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specbootstrapconfigrefwithuid","title":"fn spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#obj-specinfrastructureref","title":"obj spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machine/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/","title":"cluster.v1alpha4.machineDeployment","text":"<p>\"MachineDeployment is the Schema for the machinedeployments API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withProgressDeadlineSeconds(progressDeadlineSeconds)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>fn withRevisionHistoryLimit(revisionHistoryLimit)</code></li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.strategy</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.strategy.rollingUpdate</code><ul> <li><code>fn withDeletePolicy(deletePolicy)</code></li> <li><code>fn withMaxSurge(maxSurge)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineDeployment</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spec","title":"obj spec","text":"<p>\"MachineDeploymentSpec defines the desired state of MachineDeployment.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specwithpaused","title":"fn spec.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Indicates that the deployment is paused.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specwithprogressdeadlineseconds","title":"fn spec.withProgressDeadlineSeconds","text":"<pre><code>withProgressDeadlineSeconds(progressDeadlineSeconds)\n</code></pre> <p>\"The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specwithrevisionhistorylimit","title":"fn spec.withRevisionHistoryLimit","text":"<pre><code>withRevisionHistoryLimit(revisionHistoryLimit)\n</code></pre> <p>\"The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-specselector","title":"obj spec.selector","text":"<p>\"Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-specstrategy","title":"obj spec.strategy","text":"<p>\"The deployment strategy to use to replace existing machines with new ones.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specstrategywithtype","title":"fn spec.strategy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of deployment. Default is RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-specstrategyrollingupdate","title":"obj spec.strategy.rollingUpdate","text":"<p>\"Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specstrategyrollingupdatewithdeletepolicy","title":"fn spec.strategy.rollingUpdate.withDeletePolicy","text":"<pre><code>withDeletePolicy(deletePolicy)\n</code></pre> <p>\"DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are \\\"Random, \\\"Newest\\\", \\\"Oldest\\\" When no value is supplied, the default DeletePolicy of MachineSet is used\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specstrategyrollingupdatewithmaxsurge","title":"fn spec.strategy.rollingUpdate.withMaxSurge","text":"<pre><code>withMaxSurge(maxSurge)\n</code></pre> <p>\"The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-specstrategyrollingupdatewithmaxunavailable","title":"fn spec.strategy.rollingUpdate.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template describes the machines that will be created.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineDeployment/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/","title":"cluster.v1alpha4.machineHealthCheck","text":"<p>\"MachineHealthCheck is the Schema for the machinehealthchecks API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withMaxUnhealthy(maxUnhealthy)</code></li> <li><code>fn withNodeStartupTimeout(nodeStartupTimeout)</code></li> <li><code>fn withUnhealthyConditions(unhealthyConditions)</code></li> <li><code>fn withUnhealthyConditionsMixin(unhealthyConditions)</code></li> <li><code>fn withUnhealthyRange(unhealthyRange)</code></li> <li><code>obj spec.remediationTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.unhealthyConditions</code><ul> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineHealthCheck</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#obj-spec","title":"obj spec","text":"<p>\"Specification of machine health check policy\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specwithmaxunhealthy","title":"fn spec.withMaxUnhealthy","text":"<pre><code>withMaxUnhealthy(maxUnhealthy)\n</code></pre> <p>\"Any further remediation is only allowed if at most \\\"MaxUnhealthy\\\" machines selected by \\\"selector\\\" are not healthy.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specwithnodestartuptimeout","title":"fn spec.withNodeStartupTimeout","text":"<pre><code>withNodeStartupTimeout(nodeStartupTimeout)\n</code></pre> <p>\"Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specwithunhealthyconditions","title":"fn spec.withUnhealthyConditions","text":"<pre><code>withUnhealthyConditions(unhealthyConditions)\n</code></pre> <p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specwithunhealthyconditionsmixin","title":"fn spec.withUnhealthyConditionsMixin","text":"<pre><code>withUnhealthyConditionsMixin(unhealthyConditions)\n</code></pre> <p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specwithunhealthyrange","title":"fn spec.withUnhealthyRange","text":"<pre><code>withUnhealthyRange(unhealthyRange)\n</code></pre> <p>\"Any further remediation is only allowed if the number of machines selected by \\\"selector\\\" as not healthy is within the range of \\\"UnhealthyRange\\\". Takes precedence over MaxUnhealthy. Eg. \\\"[3-5]\\\" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#obj-specremediationtemplate","title":"obj spec.remediationTemplate","text":"<p>\"RemediationTemplate is a reference to a remediation template provided by an infrastructure provider. \\n This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithapiversion","title":"fn spec.remediationTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithfieldpath","title":"fn spec.remediationTemplate.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithkind","title":"fn spec.remediationTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithname","title":"fn spec.remediationTemplate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithnamespace","title":"fn spec.remediationTemplate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithresourceversion","title":"fn spec.remediationTemplate.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specremediationtemplatewithuid","title":"fn spec.remediationTemplate.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#obj-specselector","title":"obj spec.selector","text":"<p>\"Label selector to match machines whose health will be exercised\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#obj-specunhealthyconditions","title":"obj spec.unhealthyConditions","text":"<p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specunhealthyconditionswithtimeout","title":"fn spec.unhealthyConditions.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha4/machineHealthCheck/#fn-specunhealthyconditionswithtype","title":"fn spec.unhealthyConditions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/","title":"cluster.v1alpha4.machinePool","text":"<p>\"MachinePool is the Schema for the machinepools API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomains(failureDomains)</code></li> <li><code>fn withFailureDomainsMixin(failureDomains)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withProviderIDList(providerIDList)</code></li> <li><code>fn withProviderIDListMixin(providerIDList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachinePool</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spec","title":"obj spec","text":"<p>\"MachinePoolSpec defines the desired state of MachinePool.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithfailuredomains","title":"fn spec.withFailureDomains","text":"<pre><code>withFailureDomains(failureDomains)\n</code></pre> <p>\"FailureDomains is the list of failure domains this MachinePool should be attached to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithfailuredomainsmixin","title":"fn spec.withFailureDomainsMixin","text":"<pre><code>withFailureDomainsMixin(failureDomains)\n</code></pre> <p>\"FailureDomains is the list of failure domains this MachinePool should be attached to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithprovideridlist","title":"fn spec.withProviderIDList","text":"<pre><code>withProviderIDList(providerIDList)\n</code></pre> <p>\"ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithprovideridlistmixin","title":"fn spec.withProviderIDListMixin","text":"<pre><code>withProviderIDListMixin(providerIDList)\n</code></pre> <p>\"ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template describes the machines that will be created.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machinePool/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/","title":"cluster.v1alpha4.machineSet","text":"<p>\"MachineSet is the Schema for the machinesets API.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withDeletePolicy(deletePolicy)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineSet</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spec","title":"obj spec","text":"<p>\"MachineSetSpec defines the desired state of MachineSet.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specwithdeletepolicy","title":"fn spec.withDeletePolicy","text":"<pre><code>withDeletePolicy(deletePolicy)\n</code></pre> <p>\"DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to \\\"Random\\\".  Valid values are \\\"Random, \\\"Newest\\\", \\\"Oldest\\</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"MinReadySeconds is the minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-specselector","title":"obj spec.selector","text":"<p>\"Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources resources are treated as templates.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1alpha4/machineSet/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/","title":"cluster.v1beta1","text":"<ul> <li>cluster</li> <li>clusterClass</li> <li>machine</li> <li>machineDeployment</li> <li>machineHealthCheck</li> <li>machinePool</li> <li>machineSet</li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/cluster/","title":"cluster.v1beta1.cluster","text":"<p>\"Cluster is the Schema for the clusters API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withPaused(paused)</code></li> <li><code>obj spec.clusterNetwork</code><ul> <li><code>fn withApiServerPort(apiServerPort)</code></li> <li><code>fn withServiceDomain(serviceDomain)</code></li> <li><code>obj spec.clusterNetwork.pods</code><ul> <li><code>fn withCidrBlocks(cidrBlocks)</code></li> <li><code>fn withCidrBlocksMixin(cidrBlocks)</code></li> </ul> </li> <li><code>obj spec.clusterNetwork.services</code><ul> <li><code>fn withCidrBlocks(cidrBlocks)</code></li> <li><code>fn withCidrBlocksMixin(cidrBlocks)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controlPlaneEndpoint</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.controlPlaneRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.topology</code><ul> <li><code>fn withClass(class)</code></li> <li><code>fn withRolloutAfter(rolloutAfter)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.topology.controlPlane</code><ul> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.topology.controlPlane.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.topology.workers</code><ul> <li><code>fn withMachineDeployments(machineDeployments)</code></li> <li><code>fn withMachineDeploymentsMixin(machineDeployments)</code></li> <li><code>obj spec.topology.workers.machineDeployments</code><ul> <li><code>fn withClass(class)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.topology.workers.machineDeployments.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Cluster</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spec","title":"obj spec","text":"<p>\"ClusterSpec defines the desired state of Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specwithpaused","title":"fn spec.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused can be used to prevent controllers from processing the Cluster and all its associated objects.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-specclusternetwork","title":"obj spec.clusterNetwork","text":"<p>\"Cluster network configuration.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specclusternetworkwithapiserverport","title":"fn spec.clusterNetwork.withApiServerPort","text":"<pre><code>withApiServerPort(apiServerPort)\n</code></pre> <p>\"APIServerPort specifies the port the API Server should bind to. Defaults to 6443.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specclusternetworkwithservicedomain","title":"fn spec.clusterNetwork.withServiceDomain","text":"<pre><code>withServiceDomain(serviceDomain)\n</code></pre> <p>\"Domain name for services.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-specclusternetworkpods","title":"obj spec.clusterNetwork.pods","text":"<p>\"The network ranges from which Pod networks are allocated.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specclusternetworkpodswithcidrblocks","title":"fn spec.clusterNetwork.pods.withCidrBlocks","text":"<pre><code>withCidrBlocks(cidrBlocks)\n</code></pre>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specclusternetworkpodswithcidrblocksmixin","title":"fn spec.clusterNetwork.pods.withCidrBlocksMixin","text":"<pre><code>withCidrBlocksMixin(cidrBlocks)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-specclusternetworkservices","title":"obj spec.clusterNetwork.services","text":"<p>\"The network ranges from which service VIPs are allocated.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specclusternetworkserviceswithcidrblocks","title":"fn spec.clusterNetwork.services.withCidrBlocks","text":"<pre><code>withCidrBlocks(cidrBlocks)\n</code></pre>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specclusternetworkserviceswithcidrblocksmixin","title":"fn spec.clusterNetwork.services.withCidrBlocksMixin","text":"<pre><code>withCidrBlocksMixin(cidrBlocks)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-speccontrolplaneendpoint","title":"obj spec.controlPlaneEndpoint","text":"<p>\"ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplaneendpointwithhost","title":"fn spec.controlPlaneEndpoint.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The hostname on which the API server is serving.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplaneendpointwithport","title":"fn spec.controlPlaneEndpoint.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"The port on which the API server is serving.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-speccontrolplaneref","title":"obj spec.controlPlaneRef","text":"<p>\"ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithapiversion","title":"fn spec.controlPlaneRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithfieldpath","title":"fn spec.controlPlaneRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithkind","title":"fn spec.controlPlaneRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithname","title":"fn spec.controlPlaneRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithnamespace","title":"fn spec.controlPlaneRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithresourceversion","title":"fn spec.controlPlaneRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-speccontrolplanerefwithuid","title":"fn spec.controlPlaneRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-specinfrastructureref","title":"obj spec.infrastructureRef","text":"<p>\"InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spectopology","title":"obj spec.topology","text":"<p>\"This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologywithclass","title":"fn spec.topology.withClass","text":"<pre><code>withClass(class)\n</code></pre> <p>\"The name of the ClusterClass object to create the topology.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologywithrolloutafter","title":"fn spec.topology.withRolloutAfter","text":"<pre><code>withRolloutAfter(rolloutAfter)\n</code></pre> <p>\"RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologywithversion","title":"fn spec.topology.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"The Kubernetes version of the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spectopologycontrolplane","title":"obj spec.topology.controlPlane","text":"<p>\"ControlPlane describes the cluster control plane.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologycontrolplanewithreplicas","title":"fn spec.topology.controlPlane.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of control plane nodes. If the value is nil, the ControlPlane object is created without the number of Replicas and it's assumed that the control plane controller does not implement support for this field. When specified against a control plane provider that lacks support for this field, this value will be ignored.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spectopologycontrolplanemetadata","title":"obj spec.topology.controlPlane.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass. \\n This field is supported if and only if the control plane provider template referenced in the ClusterClass is Machine based.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologycontrolplanemetadatawithannotations","title":"fn spec.topology.controlPlane.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologycontrolplanemetadatawithannotationsmixin","title":"fn spec.topology.controlPlane.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologycontrolplanemetadatawithlabels","title":"fn spec.topology.controlPlane.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologycontrolplanemetadatawithlabelsmixin","title":"fn spec.topology.controlPlane.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spectopologyworkers","title":"obj spec.topology.workers","text":"<p>\"Workers encapsulates the different constructs that form the worker nodes for the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkerswithmachinedeployments","title":"fn spec.topology.workers.withMachineDeployments","text":"<pre><code>withMachineDeployments(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployments in the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkerswithmachinedeploymentsmixin","title":"fn spec.topology.workers.withMachineDeploymentsMixin","text":"<pre><code>withMachineDeploymentsMixin(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployments in the cluster.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spectopologyworkersmachinedeployments","title":"obj spec.topology.workers.machineDeployments","text":"<p>\"MachineDeployments is a list of machine deployments in the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentswithclass","title":"fn spec.topology.workers.machineDeployments.withClass","text":"<pre><code>withClass(class)\n</code></pre> <p>\"Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the <code>Cluster.Spec.Class</code> field.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentswithname","title":"fn spec.topology.workers.machineDeployments.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentswithreplicas","title":"fn spec.topology.workers.machineDeployments.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to zero) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#obj-spectopologyworkersmachinedeploymentsmetadata","title":"obj spec.topology.workers.machineDeployments.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithannotations","title":"fn spec.topology.workers.machineDeployments.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithannotationsmixin","title":"fn spec.topology.workers.machineDeployments.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithlabels","title":"fn spec.topology.workers.machineDeployments.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/cluster/#fn-spectopologyworkersmachinedeploymentsmetadatawithlabelsmixin","title":"fn spec.topology.workers.machineDeployments.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/","title":"cluster.v1beta1.clusterClass","text":"<p>\"ClusterClass is a template which can be used to create managed topologies.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.controlPlane</code><ul> <li><code>obj spec.controlPlane.machineInfrastructure</code><ul> <li><code>obj spec.controlPlane.machineInfrastructure.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controlPlane.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.controlPlane.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.infrastructure</code><ul> <li><code>obj spec.infrastructure.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workers</code><ul> <li><code>fn withMachineDeployments(machineDeployments)</code></li> <li><code>fn withMachineDeploymentsMixin(machineDeployments)</code></li> <li><code>obj spec.workers.machineDeployments</code><ul> <li><code>fn withClass(class)</code></li> <li><code>obj spec.workers.machineDeployments.template</code><ul> <li><code>obj spec.workers.machineDeployments.template.bootstrap</code><ul> <li><code>obj spec.workers.machineDeployments.template.bootstrap.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workers.machineDeployments.template.infrastructure</code><ul> <li><code>obj spec.workers.machineDeployments.template.infrastructure.ref</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workers.machineDeployments.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterClass</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-spec","title":"obj spec","text":"<p>\"ClusterClassSpec describes the desired state of the ClusterClass.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-speccontrolplane","title":"obj spec.controlPlane","text":"<p>\"ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-speccontrolplanemachineinfrastructure","title":"obj spec.controlPlane.machineInfrastructure","text":"<p>\"MachineTemplate defines the metadata and infrastructure information for control plane machines. \\n This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-speccontrolplanemachineinfrastructureref","title":"obj spec.controlPlane.machineInfrastructure.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithapiversion","title":"fn spec.controlPlane.machineInfrastructure.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithfieldpath","title":"fn spec.controlPlane.machineInfrastructure.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithkind","title":"fn spec.controlPlane.machineInfrastructure.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithname","title":"fn spec.controlPlane.machineInfrastructure.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithnamespace","title":"fn spec.controlPlane.machineInfrastructure.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithresourceversion","title":"fn spec.controlPlane.machineInfrastructure.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemachineinfrastructurerefwithuid","title":"fn spec.controlPlane.machineInfrastructure.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-speccontrolplanemetadata","title":"obj spec.controlPlane.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology. \\n This field is supported if and only if the control plane provider template referenced is Machine based.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemetadatawithannotations","title":"fn spec.controlPlane.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemetadatawithannotationsmixin","title":"fn spec.controlPlane.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemetadatawithlabels","title":"fn spec.controlPlane.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanemetadatawithlabelsmixin","title":"fn spec.controlPlane.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-speccontrolplaneref","title":"obj spec.controlPlane.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithapiversion","title":"fn spec.controlPlane.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithfieldpath","title":"fn spec.controlPlane.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithkind","title":"fn spec.controlPlane.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithname","title":"fn spec.controlPlane.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithnamespace","title":"fn spec.controlPlane.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithresourceversion","title":"fn spec.controlPlane.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-speccontrolplanerefwithuid","title":"fn spec.controlPlane.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specinfrastructure","title":"obj spec.infrastructure","text":"<p>\"Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specinfrastructureref","title":"obj spec.infrastructure.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructure.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructure.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructure.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructure.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructure.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructure.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructure.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkers","title":"obj spec.workers","text":"<p>\"Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkerswithmachinedeployments","title":"fn spec.workers.withMachineDeployments","text":"<pre><code>withMachineDeployments(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkerswithmachinedeploymentsmixin","title":"fn spec.workers.withMachineDeploymentsMixin","text":"<pre><code>withMachineDeploymentsMixin(machineDeployments)\n</code></pre> <p>\"MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeployments","title":"obj spec.workers.machineDeployments","text":"<p>\"MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentswithclass","title":"fn spec.workers.machineDeployments.withClass","text":"<pre><code>withClass(class)\n</code></pre> <p>\"Class denotes a type of worker node present in the cluster, this name MUST be unique within a ClusterClass and can be referenced in the Cluster to create a managed MachineDeployment.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeploymentstemplate","title":"obj spec.workers.machineDeployments.template","text":"<p>\"Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeploymentstemplatebootstrap","title":"obj spec.workers.machineDeployments.template.bootstrap","text":"<p>\"Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeploymentstemplatebootstrapref","title":"obj spec.workers.machineDeployments.template.bootstrap.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithapiversion","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithfieldpath","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithkind","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithname","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithnamespace","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithresourceversion","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatebootstraprefwithuid","title":"fn spec.workers.machineDeployments.template.bootstrap.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeploymentstemplateinfrastructure","title":"obj spec.workers.machineDeployments.template.infrastructure","text":"<p>\"Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeploymentstemplateinfrastructureref","title":"obj spec.workers.machineDeployments.template.infrastructure.ref","text":"<p>\"Ref is a required reference to a custom resource offered by a provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithapiversion","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithfieldpath","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithkind","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithname","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithnamespace","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithresourceversion","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplateinfrastructurerefwithuid","title":"fn spec.workers.machineDeployments.template.infrastructure.ref.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#obj-specworkersmachinedeploymentstemplatemetadata","title":"obj spec.workers.machineDeployments.template.metadata","text":"<p>\"Metadata is the metadata applied to the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithannotations","title":"fn spec.workers.machineDeployments.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithannotationsmixin","title":"fn spec.workers.machineDeployments.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithlabels","title":"fn spec.workers.machineDeployments.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/clusterClass/#fn-specworkersmachinedeploymentstemplatemetadatawithlabelsmixin","title":"fn spec.workers.machineDeployments.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/","title":"cluster.v1beta1.machine","text":"<p>\"Machine is the Schema for the machines API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Machine</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#obj-spec","title":"obj spec","text":"<p>\"MachineSpec defines the desired state of Machine.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specwithfailuredomain","title":"fn spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specwithnodedraintimeout","title":"fn spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specwithproviderid","title":"fn spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specwithversion","title":"fn spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#obj-specbootstrap","title":"obj spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapwithdatasecretname","title":"fn spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#obj-specbootstrapconfigref","title":"obj spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithapiversion","title":"fn spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithfieldpath","title":"fn spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithkind","title":"fn spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithname","title":"fn spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithnamespace","title":"fn spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithresourceversion","title":"fn spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specbootstrapconfigrefwithuid","title":"fn spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#obj-specinfrastructureref","title":"obj spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithapiversion","title":"fn spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithfieldpath","title":"fn spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithkind","title":"fn spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithname","title":"fn spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithnamespace","title":"fn spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithresourceversion","title":"fn spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machine/#fn-specinfrastructurerefwithuid","title":"fn spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/","title":"cluster.v1beta1.machineDeployment","text":"<p>\"MachineDeployment is the Schema for the machinedeployments API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withProgressDeadlineSeconds(progressDeadlineSeconds)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>fn withRevisionHistoryLimit(revisionHistoryLimit)</code></li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.strategy</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.strategy.rollingUpdate</code><ul> <li><code>fn withDeletePolicy(deletePolicy)</code></li> <li><code>fn withMaxSurge(maxSurge)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineDeployment</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spec","title":"obj spec","text":"<p>\"MachineDeploymentSpec defines the desired state of MachineDeployment.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specwithpaused","title":"fn spec.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Indicates that the deployment is paused.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specwithprogressdeadlineseconds","title":"fn spec.withProgressDeadlineSeconds","text":"<pre><code>withProgressDeadlineSeconds(progressDeadlineSeconds)\n</code></pre> <p>\"The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specwithrevisionhistorylimit","title":"fn spec.withRevisionHistoryLimit","text":"<pre><code>withRevisionHistoryLimit(revisionHistoryLimit)\n</code></pre> <p>\"The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-specselector","title":"obj spec.selector","text":"<p>\"Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-specstrategy","title":"obj spec.strategy","text":"<p>\"The deployment strategy to use to replace existing machines with new ones.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specstrategywithtype","title":"fn spec.strategy.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of deployment. Default is RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-specstrategyrollingupdate","title":"obj spec.strategy.rollingUpdate","text":"<p>\"Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specstrategyrollingupdatewithdeletepolicy","title":"fn spec.strategy.rollingUpdate.withDeletePolicy","text":"<pre><code>withDeletePolicy(deletePolicy)\n</code></pre> <p>\"DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are \\\"Random, \\\"Newest\\\", \\\"Oldest\\\" When no value is supplied, the default DeletePolicy of MachineSet is used\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specstrategyrollingupdatewithmaxsurge","title":"fn spec.strategy.rollingUpdate.withMaxSurge","text":"<pre><code>withMaxSurge(maxSurge)\n</code></pre> <p>\"The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-specstrategyrollingupdatewithmaxunavailable","title":"fn spec.strategy.rollingUpdate.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template describes the machines that will be created.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineDeployment/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/","title":"cluster.v1beta1.machineHealthCheck","text":"<p>\"MachineHealthCheck is the Schema for the machinehealthchecks API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withMaxUnhealthy(maxUnhealthy)</code></li> <li><code>fn withNodeStartupTimeout(nodeStartupTimeout)</code></li> <li><code>fn withUnhealthyConditions(unhealthyConditions)</code></li> <li><code>fn withUnhealthyConditionsMixin(unhealthyConditions)</code></li> <li><code>fn withUnhealthyRange(unhealthyRange)</code></li> <li><code>obj spec.remediationTemplate</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.unhealthyConditions</code><ul> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineHealthCheck</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#obj-spec","title":"obj spec","text":"<p>\"Specification of machine health check policy\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specwithmaxunhealthy","title":"fn spec.withMaxUnhealthy","text":"<pre><code>withMaxUnhealthy(maxUnhealthy)\n</code></pre> <p>\"Any further remediation is only allowed if at most \\\"MaxUnhealthy\\\" machines selected by \\\"selector\\\" are not healthy.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specwithnodestartuptimeout","title":"fn spec.withNodeStartupTimeout","text":"<pre><code>withNodeStartupTimeout(nodeStartupTimeout)\n</code></pre> <p>\"Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specwithunhealthyconditions","title":"fn spec.withUnhealthyConditions","text":"<pre><code>withUnhealthyConditions(unhealthyConditions)\n</code></pre> <p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specwithunhealthyconditionsmixin","title":"fn spec.withUnhealthyConditionsMixin","text":"<pre><code>withUnhealthyConditionsMixin(unhealthyConditions)\n</code></pre> <p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specwithunhealthyrange","title":"fn spec.withUnhealthyRange","text":"<pre><code>withUnhealthyRange(unhealthyRange)\n</code></pre> <p>\"Any further remediation is only allowed if the number of machines selected by \\\"selector\\\" as not healthy is within the range of \\\"UnhealthyRange\\\". Takes precedence over MaxUnhealthy. Eg. \\\"[3-5]\\\" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#obj-specremediationtemplate","title":"obj spec.remediationTemplate","text":"<p>\"RemediationTemplate is a reference to a remediation template provided by an infrastructure provider. \\n This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithapiversion","title":"fn spec.remediationTemplate.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithfieldpath","title":"fn spec.remediationTemplate.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithkind","title":"fn spec.remediationTemplate.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithname","title":"fn spec.remediationTemplate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithnamespace","title":"fn spec.remediationTemplate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithresourceversion","title":"fn spec.remediationTemplate.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specremediationtemplatewithuid","title":"fn spec.remediationTemplate.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#obj-specselector","title":"obj spec.selector","text":"<p>\"Label selector to match machines whose health will be exercised\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#obj-specunhealthyconditions","title":"obj spec.unhealthyConditions","text":"<p>\"UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specunhealthyconditionswithtimeout","title":"fn spec.unhealthyConditions.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"v1.0.2/cluster/v1beta1/machineHealthCheck/#fn-specunhealthyconditionswithtype","title":"fn spec.unhealthyConditions.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/","title":"cluster.v1beta1.machinePool","text":"<p>\"MachinePool is the Schema for the machinepools API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomains(failureDomains)</code></li> <li><code>fn withFailureDomainsMixin(failureDomains)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withProviderIDList(providerIDList)</code></li> <li><code>fn withProviderIDListMixin(providerIDList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachinePool</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spec","title":"obj spec","text":"<p>\"MachinePoolSpec defines the desired state of MachinePool.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithfailuredomains","title":"fn spec.withFailureDomains","text":"<pre><code>withFailureDomains(failureDomains)\n</code></pre> <p>\"FailureDomains is the list of failure domains this MachinePool should be attached to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithfailuredomainsmixin","title":"fn spec.withFailureDomainsMixin","text":"<pre><code>withFailureDomainsMixin(failureDomains)\n</code></pre> <p>\"FailureDomains is the list of failure domains this MachinePool should be attached to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithprovideridlist","title":"fn spec.withProviderIDList","text":"<pre><code>withProviderIDList(providerIDList)\n</code></pre> <p>\"ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithprovideridlistmixin","title":"fn spec.withProviderIDListMixin","text":"<pre><code>withProviderIDListMixin(providerIDList)\n</code></pre> <p>\"ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template describes the machines that will be created.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machinePool/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/","title":"cluster.v1beta1.machineSet","text":"<p>\"MachineSet is the Schema for the machinesets API.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withDeletePolicy(deletePolicy)</code></li> <li><code>fn withMinReadySeconds(minReadySeconds)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchExpressions(matchExpressions)</code></li> <li><code>fn withMatchExpressionsMixin(matchExpressions)</code></li> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> <li><code>obj spec.selector.matchExpressions</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withOperator(operator)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>obj spec.template.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.template.spec</code><ul> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withFailureDomain(failureDomain)</code></li> <li><code>fn withNodeDrainTimeout(nodeDrainTimeout)</code></li> <li><code>fn withProviderID(providerID)</code></li> <li><code>fn withVersion(version)</code></li> <li><code>obj spec.template.spec.bootstrap</code><ul> <li><code>fn withDataSecretName(dataSecretName)</code></li> <li><code>obj spec.template.spec.bootstrap.configRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.template.spec.infrastructureRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fields","title":"Fields","text":""},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of MachineSet</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spec","title":"obj spec","text":"<p>\"MachineSetSpec defines the desired state of MachineSet.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specwithclustername","title":"fn spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specwithdeletepolicy","title":"fn spec.withDeletePolicy","text":"<pre><code>withDeletePolicy(deletePolicy)\n</code></pre> <p>\"DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to \\\"Random\\\".  Valid values are \\\"Random, \\\"Newest\\\", \\\"Oldest\\</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specwithminreadyseconds","title":"fn spec.withMinReadySeconds","text":"<pre><code>withMinReadySeconds(minReadySeconds)\n</code></pre> <p>\"MinReadySeconds is the minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specwithreplicas","title":"fn spec.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-specselector","title":"obj spec.selector","text":"<p>\"Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectorwithmatchexpressions","title":"fn spec.selector.withMatchExpressions","text":"<pre><code>withMatchExpressions(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectorwithmatchexpressionsmixin","title":"fn spec.selector.withMatchExpressionsMixin","text":"<pre><code>withMatchExpressionsMixin(matchExpressions)\n</code></pre> <p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-specselectormatchexpressions","title":"obj spec.selector.matchExpressions","text":"<p>\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectormatchexpressionswithkey","title":"fn spec.selector.matchExpressions.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"key is the label key that the selector applies to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectormatchexpressionswithoperator","title":"fn spec.selector.matchExpressions.withOperator","text":"<pre><code>withOperator(operator)\n</code></pre> <p>\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectormatchexpressionswithvalues","title":"fn spec.selector.matchExpressions.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-specselectormatchexpressionswithvaluesmixin","title":"fn spec.selector.matchExpressions.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources resources are treated as templates.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spectemplatemetadata","title":"obj spec.template.metadata","text":"<p>\"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatemetadatawithannotations","title":"fn spec.template.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatemetadatawithannotationsmixin","title":"fn spec.template.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatemetadatawithlabels","title":"fn spec.template.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatemetadatawithlabelsmixin","title":"fn spec.template.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spectemplatespec","title":"obj spec.template.spec","text":"<p>\"Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecwithclustername","title":"fn spec.template.spec.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"ClusterName is the name of the Cluster this object belongs to.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecwithfailuredomain","title":"fn spec.template.spec.withFailureDomain","text":"<pre><code>withFailureDomain(failureDomain)\n</code></pre> <p>\"FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecwithnodedraintimeout","title":"fn spec.template.spec.withNodeDrainTimeout","text":"<pre><code>withNodeDrainTimeout(nodeDrainTimeout)\n</code></pre> <p>\"NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from <code>kubectl drain --timeout</code>\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecwithproviderid","title":"fn spec.template.spec.withProviderID","text":"<pre><code>withProviderID(providerID)\n</code></pre> <p>\"ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecwithversion","title":"fn spec.template.spec.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spectemplatespecbootstrap","title":"obj spec.template.spec.bootstrap","text":"<p>\"Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine\u2019s bootstrapping mechanism.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapwithdatasecretname","title":"fn spec.template.spec.bootstrap.withDataSecretName","text":"<pre><code>withDataSecretName(dataSecretName)\n</code></pre> <p>\"DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spectemplatespecbootstrapconfigref","title":"obj spec.template.spec.bootstrap.configRef","text":"<p>\"ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithapiversion","title":"fn spec.template.spec.bootstrap.configRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithfieldpath","title":"fn spec.template.spec.bootstrap.configRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithkind","title":"fn spec.template.spec.bootstrap.configRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithname","title":"fn spec.template.spec.bootstrap.configRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithnamespace","title":"fn spec.template.spec.bootstrap.configRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithresourceversion","title":"fn spec.template.spec.bootstrap.configRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecbootstrapconfigrefwithuid","title":"fn spec.template.spec.bootstrap.configRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#obj-spectemplatespecinfrastructureref","title":"obj spec.template.spec.infrastructureRef","text":"<p>\"InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithapiversion","title":"fn spec.template.spec.infrastructureRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithfieldpath","title":"fn spec.template.spec.infrastructureRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithkind","title":"fn spec.template.spec.infrastructureRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithname","title":"fn spec.template.spec.infrastructureRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithnamespace","title":"fn spec.template.spec.infrastructureRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithresourceversion","title":"fn spec.template.spec.infrastructureRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"v1.0.2/cluster/v1beta1/machineSet/#fn-spectemplatespecinfrastructurerefwithuid","title":"fn spec.template.spec.infrastructureRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"}]}